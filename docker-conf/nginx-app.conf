# mysite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
  server unix:///var/run/chameleon-app.sock; # for a file socket
  # server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

server {
  listen         80 default_server;
  server_name    www.chameleoncloud.org chameleoncloud.org;
  return         301 https://$server_name$request_uri;
}

server {
  listen         80;
  server_name    www.tacc.chameleoncloud.org;
  return         301 https://$server_name$request_uri;
}

server {
  listen         80;
  server_name    api.chameleoncloud.org api.tacc.chameleoncloud.org;
  return         301 https://$server_name$request_uri;
}

server {
  listen         80;
  server_name    www.chameleon.tacc.utexas.edu;
  return         301 https://$server_name$request_uri;
}

server {
  listen         80;
  server_name    dev.chameleon.tacc.utexas.edu;
  return         301 https://$server_name$request_uri;
}

server {
  listen      443 ssl;

  server_name    chameleoncloud.org;
  charset     utf-8;

  ssl_certificate       /etc/ssl/chameleoncloud.org/bundle.crt;
  ssl_certificate_key   /etc/ssl/chameleoncloud.org/site.key;
  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam           /etc/ssl/dhparams.pem;

  return    301 https://www.$server_name$request_uri;
}

server {
  listen      443 ssl;

  server_name    www.chameleoncloud.org chameleoncloud.org;
  charset     utf-8;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  ssl_certificate       /etc/ssl/chameleoncloud.org/bundle.crt;
  ssl_certificate_key   /etc/ssl/chameleoncloud.org/site.key;
  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam           /etc/ssl/dhparams.pem;

  # max upload size
  client_max_body_size 75M;   # adjust to taste

  # Django media
  location /media  {
    alias /project/media;  # your Django project's media files - amend as required
  }

  location /static {
    alias /var/www/chameleoncloud.org/static; # your Django project's static files - amend as required
  }

  location /robots.txt {
    alias /var/www/chameleoncloud.org/static/robots.txt;
  }
  
  include /etc/nginx/conf.d/includes/portal_*.conf;

  # Finally, send all non-media requests to the Django server.
  location / {
    uwsgi_pass  django;
    include     /project/docker-conf/uwsgi_params; # the uwsgi_params file you installed
  }
}

server {
  listen      443 ssl;

  server_name    www.tacc.chameleoncloud.org;
  charset     utf-8;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  ssl_certificate     /etc/ssl/chameleoncloud.org/bundle.crt;
  ssl_certificate_key /etc/ssl/chameleoncloud.org/site.key;
  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam           /etc/ssl/dhparams.pem;

  # max upload size
  client_max_body_size 75M;   # adjust to taste

  # Django media
  location /media  {
    alias /project/media;  # your Django project's media files - amend as required
  }

  location /static {
    alias /var/www/chameleoncloud.org/static; # your Django project's static files - amend as required
  }

  location /robots.txt {
    alias /var/www/chameleoncloud.org/static/robots.txt;
  }

  # Finally, send all non-media requests to the Django server.
  location / {
    uwsgi_pass  django;
    include     /project/docker-conf/uwsgi_params; # the uwsgi_params file you installed
  }
}

server {
  listen      443 ssl;

  server_name    api.chameleoncloud.org api.tacc.chameleoncloud.org;
  charset     utf-8;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  ssl_certificate     /etc/ssl/api.chameleoncloud.org/bundle.crt;
  ssl_certificate_key /etc/ssl/api.chameleoncloud.org/site.key;
  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam           /etc/ssl/dhparams.pem;

  # Finally, send all non-media requests to the Django server.
  location / {
    proxy_pass  http://referenceapi:8000;
    include     /project/docker-conf/uwsgi_params; # the uwsgi_params file you installed
  }
}

server {
  listen      443 ssl;

  server_name    www.chameleon.tacc.utexas.edu;
  charset     utf-8;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  ssl_certificate     /etc/ssl/www.chameleon.tacc.utexas.edu/bundle.crt;
  ssl_certificate_key /etc/ssl/www.chameleon.tacc.utexas.edu/site.key;
  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam           /etc/ssl/dhparams.pem;

  # max upload size
  client_max_body_size 75M;   # adjust to taste

  # Django media
  location /media  {
    alias /project/media;  # your Django project's media files - amend as required
  }

  location /static {
    alias /var/www/chameleoncloud.org/static; # your Django project's static files - amend as required
  }

  location /robots.txt {
    alias /var/www/chameleoncloud.org/static/robots.txt;
  }

  # Finally, send all non-media requests to the Django server.
  location / {
    uwsgi_pass  django;
    include     /project/docker-conf/uwsgi_params; # the uwsgi_params file you installed
  }
}

server {
  listen      443 ssl;

  server_name    dev.chameleon.tacc.utexas.edu;
  charset     utf-8;

  access_log /dev/stdout;
  error_log  /dev/stderr info;

  ssl_certificate     /etc/ssl/www.chameleon.tacc.utexas.edu/bundle.crt;
  ssl_certificate_key /etc/ssl/www.chameleon.tacc.utexas.edu/site.key;
  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;
  ssl_dhparam           /etc/ssl/dhparams.pem;

  # max upload size
  client_max_body_size 75M;   # adjust to taste

  # Django media
  location /media  {
    alias /project/media;  # your Django project's media files - amend as required
  }

  location /static {
    alias /var/www/chameleoncloud.org/static; # your Django project's static files - amend as required
  }

  include /etc/nginx/conf.d/includes/portal_*.conf;

  # Finally, send all non-media requests to the Django server.
  location / {
    uwsgi_pass  django;
    include     /project/docker-conf/uwsgi_params; # the uwsgi_params file you installed
  }
}
